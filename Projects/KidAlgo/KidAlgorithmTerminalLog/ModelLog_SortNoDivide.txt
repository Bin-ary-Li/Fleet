binli@binli-HP-Z420-Workstation:~$ cd '/home/binli/Desktop/BinCalGitDir/' 
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir$ git clone https://github.com/Bin-ary-Li/Fleet.git
Cloning into 'Fleet'...
remote: Enumerating objects: 25, done.
remote: Counting objects: 100% (25/25), done.
remote: Compressing objects: 100% (21/21), done.
remote: Total 394 (delta 8), reused 11 (delta 4), pack-reused 369
Receiving objects: 100% (394/394), 2.23 MiB | 4.88 MiB/s, done.
Resolving deltas: 100% (231/231), done.
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir$ ls
Fleet  LOTlib
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir$ cd Fleet/
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet$ ls
Fleet.mk  LICENSE  logo.svg  Models  src
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet$ cd Models/
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models$ ls
FormalLanguageTheory-Complex  FormalLanguageTheory-Simple  Number-Fancy
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models$ cd FormalLanguageTheory-Simple/
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ ls
KidAlgorithmTerminalLog  main  Main.cpp  Makefile
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ ./main --alphabet=BRG/ --data=R//G,R//GR//G,R//GR//GR//G --threads=4 --top=1
bash: ./main: cannot execute binary file: Exec format error
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ ./main --alphabet=BRG/ --data=R//G,R//GR//G,R//GR//GR//G --threads=4 --top=10
bash: ./main: cannot execute binary file: Exec format error
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ ls
KidAlgorithmTerminalLog  main  Main.cpp  Makefile
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ make main.cpp
make: *** No rule to make target 'main.cpp'.  Stop.
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ make
g++ Main.cpp -o main -lm -O3 -std=gnu++17 -Wall  -fdiagnostics-color=auto -lpthread -I../../src/ -I../../src/Inference
In file included from /usr/include/x86_64-linux-gnu/bits/posix1_lim.h:160:0,
                 from /usr/include/limits.h:183,
                 from /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h:194,
                 from /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h:7,
                 from /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h:34,
                 from ../../src/Fleet.h:12,
                 from Main.cpp:15:
../../src/Fleet.h: In function ‘void Fleet_initialize()’:
../../src/Fleet.h:269:6: error: expected unqualified-id before numeric constant
  int HOST_NAME_MAX;
      ^
../../src/Fleet.h:270:6: error: expected unqualified-id before numeric constant
  int LOGIN_NAME_MAX;
      ^
Makefile:4: recipe for target 'all' failed
make: *** [all] Error 1
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ make
g++ Main.cpp -o main -lm -O3 -std=gnu++17 -Wall  -fdiagnostics-color=auto -lpthread -I../../src/ -I../../src/Inference
In file included from /usr/include/x86_64-linux-gnu/bits/posix1_lim.h:160:0,
                 from /usr/include/limits.h:183,
                 from /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h:194,
                 from /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/syslimits.h:7,
                 from /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed/limits.h:34,
                 from ../../src/Fleet.h:12,
                 from Main.cpp:15:
../../src/Fleet.h: In function ‘void Fleet_initialize()’:
../../src/Fleet.h:269:6: error: expected unqualified-id before numeric constant
  int HOST_NAME_MAX = 10;
      ^
../../src/Fleet.h:270:6: error: expected unqualified-id before numeric constant
  int LOGIN_NAME_MAX = 10;
      ^
Makefile:4: recipe for target 'all' failed
make: *** [all] Error 1
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ make
g++ Main.cpp -o main -lm -O3 -std=gnu++17 -Wall  -fdiagnostics-color=auto -lpthread -I../../src/ -I../../src/Inference
In file included from Main.cpp:15:0:
../../src/Fleet.h: In function ‘void Fleet_initialize()’:
../../src/Fleet.h:273:31: warning: ‘HOST_NAME_MAX_1’ is used uninitialized in this function [-Wuninitialized]
  char hostname[HOST_NAME_MAX_1];
                               ^
../../src/Fleet.h:274:32: warning: ‘LOGIN_NAME_MAX_1’ is used uninitialized in this function [-Wuninitialized]
  char username[LOGIN_NAME_MAX_1];
                                ^
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ ./main --alphabet=BRG/ --data=R//G,R//GR//G,R//GR//GR//G --threads=4 --top=10
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Running Fleet on �#l�� with PID=5874 by user �#l�� at Sun Mar  3 22:28:40 2019
# Executable checksum: 5a6826c18bf92e6614357f4d4967292f  /proc/5874/exe
# 	 --input=input.txt
# 	 --nthreads=4
# 	 --mcmc=100000
# 	 --time=0
# 	 --restart=0
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# {'':0# } [Z=0]{
# NewTop:0	-145.049	-1.22378	-143.825	λx.x
'':0} [Z=0]
# NewTop:1	-145.049	-1.22378	-143.825	λx.x
# {'R':0} [Z=0]
# NewTop:0	-128.461	-2.61007	-125.851	λx.R
# {'R/':0} [Z=0]
# NewTop:0	-125.767	-17.8901	-107.877	λx.cons(R,cons(x,if(flip(),/,/)))
# {'R/':0} [Z=0]
# NewTop:0	-124.543	-16.6663	-107.877	λx.cons(car(R),if(flip(),/,/))
# {'R/':0} [Z=0]
# NewTop:0	-115.93	-8.05335	-107.877	λx.cons(R,/)
# {'R//':0} [Z=0]
# NewTop:0	-103.399	-13.4966	-89.9021	λx.cons(cons(R,/),/)
# {'R//G':0} [Z=0]
# NewTop:0	-90.8676	-18.9399	-71.9277	λx.cons(cons(cons(R,/),/),G)
# {'R//GR':-0.693147, 'R//G':-1.38629, 'R//GR//GR':-2.07944, 'R//GR//G':-2.77259, 'R//GR//GR//GR':-3.46574, 'R//GR//GR//G':-4.15888, 'R//GR//GR//GR//GR':-4.85203, 'R//GR//GR//GR//G':-5.54518, 'R//GR//GR//GR//GR//GR':-6.23832, 'R//GR//GR//GR//GR//G':-6.93147, 'R//GR//GR//GR//GR//GR//GR':-7.62462, 'R//GR//GR//GR//GR//GR//G':-8.31777, 'R//GR//GR//GR//GR//GR//GR//GR':-9.01091, 'R//GR//GR//GR//GR//GR//GR//G':-9.70406} [Z=-6.1037e-05]
# NewTop:0	-45.2675	-36.9196	-8.34792	λx.cons(cons(cons(cons(R,/),/),G),if(flip(),R,if(flip(),x,F(''))))
# {'R//G':-0.693147, 'R//GR//G':-1.38629, 'R//GR//GR//G':-2.07944, 'R//GR//GR//GR//G':-2.77259, 'R//GR//GR//GR//GR//G':-3.46574, 'R//GR//GR//GR//GR//GR//G':-4.15888, 'R//GR//GR//GR//GR//GR//GR//G':-4.85203, 'R//GR//GR//GR//GR//GR//GR//GR//G':-5.54518, 'R//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.23832, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.93147, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-7.62462, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-8.31777, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.01091, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.70406} [Z=-6.1037e-05]
# NewTop:0	-33.7195	-29.5304	-4.18903	λx.cons(cons(cons(cons(R,/),/),G),if(flip(),x,F(x)))
# {'R//G':-0.693147, 'R//GR//G':-1.38629, 'R//GR//GR//G':-2.07944, 'R//GR//GR//GR//G':-2.77259, 'R//GR//GR//GR//GR//G':-3.46574, 'R//GR//GR//GR//GR//GR//G':-4.15888, 'R//GR//GR//GR//GR//GR//GR//G':-4.85203, 'R//GR//GR//GR//GR//GR//GR//GR//G':-5.54518, 'R//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.23832, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.93147, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-7.62462, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-8.31777, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.01091, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.70406} [Z=-6.1037e-05]
8095	-33.7195	-29.5304	-4.18903	λx.cons(cons(if(flip(),x,F(x)),cons(cons(R,/),/)),G)
# {'R//G':-0.693147, 'R//GR//G':-1.38629, 'R//GR//GR//G':-2.07944, 'R//GR//GR//GR//G':-2.77259, 'R//GR//GR//GR//GR//G':-3.46574, 'R//GR//GR//GR//GR//GR//G':-4.15888, 'R//GR//GR//GR//GR//GR//GR//G':-4.85203, 'R//GR//GR//GR//GR//GR//GR//GR//G':-5.54518, 'R//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.23832, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.93147, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-7.62462, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-8.31777, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.01091, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.70406} [Z=-6.1037e-05]
5006	-33.7195	-29.5304	-4.18903	λx.cons(cons(if(flip(),F(x),x),cons(cons(R,/),/)),G)
# {'R//G':-0.693147, 'R//GR//G':-1.38629, 'R//GR//GR//G':-2.07944, 'R//GR//GR//GR//G':-2.77259, 'R//GR//GR//GR//GR//G':-3.46574, 'R//GR//GR//GR//GR//GR//G':-4.15888, 'R//GR//GR//GR//GR//GR//GR//G':-4.85203, 'R//GR//GR//GR//GR//GR//GR//GR//G':-5.54518, 'R//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.23832, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.93147, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-7.62462, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-8.31777, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.01091, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.70406} [Z=-6.1037e-05]
1413	-33.7195	-29.5304	-4.18903	λx.cons(cons(cons(if(flip(),F(x),x),R),cons(/,/)),G)
# {'R//G':-0.693147, 'R//GR//G':-1.38629, 'R//GR//GR//G':-2.07944, 'R//GR//GR//GR//G':-2.77259, 'R//GR//GR//GR//GR//G':-3.46574, 'R//GR//GR//GR//GR//GR//G':-4.15888, 'R//GR//GR//GR//GR//GR//GR//G':-4.85203, 'R//GR//GR//GR//GR//GR//GR//GR//G':-5.54518, 'R//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.23832, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.93147, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-7.62462, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-8.31777, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.01091, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.70406} [Z=-6.1037e-05]
2598	-33.7195	-29.5304	-4.18903	λx.cons(cons(cons(if(flip(),x,F(x)),R),cons(/,/)),G)
# {'R//G':-0.693147, 'R//GR//G':-1.38629, 'R//GR//GR//G':-2.07944, 'R//GR//GR//GR//G':-2.77259, 'R//GR//GR//GR//GR//G':-3.46574, 'R//GR//GR//GR//GR//GR//G':-4.15888, 'R//GR//GR//GR//GR//GR//GR//G':-4.85203, 'R//GR//GR//GR//GR//GR//GR//GR//G':-5.54518, 'R//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.23832, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.93147, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-7.62462, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-8.31777, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.01091, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.70406} [Z=-6.1037e-05]
585	-33.7195	-29.5304	-4.18903	λx.cons(if(flip(),x,F(x)),cons(cons(R,/),cons(/,G)))
# {'R//G':-0.693147, 'R//GR//G':-1.38629, 'R//GR//GR//G':-2.07944, 'R//GR//GR//GR//G':-2.77259, 'R//GR//GR//GR//GR//G':-3.46574, 'R//GR//GR//GR//GR//GR//G':-4.15888, 'R//GR//GR//GR//GR//GR//GR//G':-4.85203, 'R//GR//GR//GR//GR//GR//GR//GR//G':-5.54518, 'R//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.23832, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.93147, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-7.62462, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-8.31777, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.01091, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.70406} [Z=-6.1037e-05]
2188	-33.7195	-29.5304	-4.18903	λx.cons(if(flip(),F(x),x),cons(cons(R,/),cons(/,G)))
# {'R//G':-0.693147, 'R//GR//G':-1.38629, 'R//GR//GR//G':-2.07944, 'R//GR//GR//GR//G':-2.77259, 'R//GR//GR//GR//GR//G':-3.46574, 'R//GR//GR//GR//GR//GR//G':-4.15888, 'R//GR//GR//GR//GR//GR//GR//G':-4.85203, 'R//GR//GR//GR//GR//GR//GR//GR//G':-5.54518, 'R//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.23832, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.93147, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-7.62462, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-8.31777, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.01091, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.70406} [Z=-6.1037e-05]
842	-33.7195	-29.5304	-4.18903	λx.cons(cons(cons(R,cons(/,/)),G),if(flip(),F(x),x))
# {'R//G':-0.693147, 'R//GR//G':-1.38629, 'R//GR//GR//G':-2.07944, 'R//GR//GR//GR//G':-2.77259, 'R//GR//GR//GR//GR//G':-3.46574, 'R//GR//GR//GR//GR//GR//G':-4.15888, 'R//GR//GR//GR//GR//GR//GR//G':-4.85203, 'R//GR//GR//GR//GR//GR//GR//GR//G':-5.54518, 'R//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.23832, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.93147, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-7.62462, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-8.31777, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.01091, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.70406} [Z=-6.1037e-05]
6665	-33.7195	-29.5304	-4.18903	λx.cons(cons(cons(cons(R,/),/),G),if(flip(),F(x),x))
# {'R//G':-0.693147, 'R//GR//G':-1.38629, 'R//GR//GR//G':-2.07944, 'R//GR//GR//GR//G':-2.77259, 'R//GR//GR//GR//GR//G':-3.46574, 'R//GR//GR//GR//GR//GR//G':-4.15888, 'R//GR//GR//GR//GR//GR//GR//G':-4.85203, 'R//GR//GR//GR//GR//GR//GR//GR//G':-5.54518, 'R//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.23832, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.93147, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-7.62462, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-8.31777, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.01091, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.70406} [Z=-6.1037e-05]
4376	-33.7195	-29.5304	-4.18903	λx.cons(cons(cons(cons(R,/),/),G),if(flip(),x,F(x)))
# {'R//G':-0.693147, 'R//GR//G':-1.38629, 'R//GR//GR//G':-2.07944, 'R//GR//GR//GR//G':-2.77259, 'R//GR//GR//GR//GR//G':-3.46574, 'R//GR//GR//GR//GR//GR//G':-4.15888, 'R//GR//GR//GR//GR//GR//GR//G':-4.85203, 'R//GR//GR//GR//GR//GR//GR//GR//G':-5.54518, 'R//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.23832, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-6.93147, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-7.62462, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-8.31777, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.01091, 'R//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//GR//G':-9.70406} [Z=-6.1037e-05]
709	-33.7195	-29.5304	-4.18903	λx.cons(cons(cons(R,cons(/,/)),G),if(flip(),x,F(x)))
# Global sample count:	399996
# Elapsed time:	832.386 seconds 
# Samples per second:	480.541
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ ^C
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ 
