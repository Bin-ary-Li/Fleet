binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ ./main --alphabet=BRG/ --data=G//RR,G//RRG//RR,G//RRG//RRG//RR --threads=4 --top=10
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Running Fleet on ���� with PID=5882 by user ���� at Sun Mar  3 22:29:00 2019
# Executable checksum: 5a6826c18bf92e6614357f4d4967292f  /proc/5882/exe
# 	 --input=input.txt
# 	 --nthreads=4
# 	 --mcmc=100000
# 	 --time=0
# 	 --restart=0
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# {'G':0} [Z=0]
# NewTop:0	-164.41	-2.61007	-161.8	λx.G
# {'G/':0} [Z=0]
# NewTop:0	-151.879	-8.05335	-143.825	λx.cons(G,/)
# {'G//':0} [Z=0]
# NewTop:0	-139.348	-13.4966	-125.851	λx.cons(G,cons(/,/))
# {'G//':-0.693147, 'G//R':-0.693147} [Z=0]
# NewTop:0	-137.339	-27.3904	-109.948	λx.cons(cons(x,G),cons(cons(/,/),if(flip(),R,x)))
# {'G//':-0.693147, 'G//R':-0.693147} [Z=0]
# NewTop:0	-133.282	-23.3334	-109.948	λx.cons(G,cons(cons(/,/),if(flip(),R,x)))
# {'G//R':0} [Z=0]
# NewTop:0	-126.816	-18.9399	-107.877	λx.cons(G,cons(cons(/,/),R))
# {'G//RR':-0.693147, 'G/RR':-0.693147} [Z=0]
# NewTop:0	-120.758	-28.7767	-91.9816	λx.cons(G,cons(cons(if(flip(),x,/),cons(/,R)),R))
# {'G//RR':0} [Z=0]
# NewTop:0	-114.285	-24.3832	-89.9021	λx.cons(G,cons(cons(/,cons(/,R)),R))
# {'G//RR':-0.693147, 'G//RRG':-0.693147} [Z=0]
# NewTop:0	-114.214	-34.2199	-79.9936	λx.cons(G,cons(cons(/,cons(/,R)),cons(R,if(flip(),G,x))))
# {'G//RR':-1.38629, 'G//RRG':-1.38629, 'G//RRG//RR':-2.07944, 'G//RRG//RRG':-2.07944, 'G//RRG//RRG//RR':-2.77259, 'G//RRG//RRG//RRG':-2.77259, 'G//RRG//RRG//RRG//RR':-3.46574, 'G//RRG//RRG//RRG//RRG':-3.46574, 'G//RRG//RRG//RRG//RRG//RR':-4.15888, 'G//RRG//RRG//RRG//RRG//RRG':-4.15888, 'G//RRG//RRG//RRG//RRG//RRG//RR':-4.85203, 'G//RRG//RRG//RRG//RRG//RRG//RRG':-4.85203, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RR':-5.54518, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG':-5.54518, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.23832, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG':-6.23832, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.93147, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG':-6.93147, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-7.62462, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG':-7.62462, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-8.31777, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG':-8.31777, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-9.01091, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG':-9.01091} [Z=-0.00024417]
# NewTop:0	-53.0248	-46.7564	-6.26848	λx.cons(G,cons(cons(/,cons(/,R)),cons(R,if(flip(),F(x),if(flip(),G,if(flip(),x,''))))))
# {'G//RR':-0.693147, 'G//RRG//RR':-1.38629, 'G//RRG//RRG//RR':-2.07944, 'G//RRG//RRG//RRG//RR':-2.77259, 'G//RRG//RRG//RRG//RRG//RR':-3.46574, 'G//RRG//RRG//RRG//RRG//RRG//RR':-4.15888, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RR':-4.85203, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-5.54518, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.23832, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.93147, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-7.62462, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-8.31777} [Z=-0.00024417]
# NewTop:0	-40.549	-36.36	-4.18903	λx.cons(G,cons(cons(/,cons(/,R)),if(flip(),R,cons(R,F(x)))))
# {'G//RR':-0.693147, 'G//RRG//RR':-1.38629, 'G//RRG//RRG//RR':-2.07944, 'G//RRG//RRG//RRG//RR':-2.77259, 'G//RRG//RRG//RRG//RRG//RR':-3.46574, 'G//RRG//RRG//RRG//RRG//RRG//RR':-4.15888, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RR':-4.85203, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-5.54518, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.23832, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.93147, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-7.62462, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-8.31777} [Z=-0.00024417]
# NewTop:0	-39.1628	-34.9737	-4.18903	λx.cons(G,cons(cons(/,cons(/,R)),cons(R,if(flip(),F(x),x))))
# {'G//RR':-0.693147, 'G//RRG//RR':-1.38629, 'G//RRG//RRG//RR':-2.07944, 'G//RRG//RRG//RRG//RR':-2.77259, 'G//RRG//RRG//RRG//RRG//RR':-3.46574, 'G//RRG//RRG//RRG//RRG//RRG//RR':-4.15888, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RR':-4.85203, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-5.54518, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.23832, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.93147, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-7.62462, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-8.31777} [Z=-0.00024417]
3962	-39.1628	-34.9737	-4.18903	λx.cons(G,cons(/,cons(/,cons(cons(R,R),if(flip(),F(x),x)))))
# {'G//RR':-0.693147, 'G//RRG//RR':-1.38629, 'G//RRG//RRG//RR':-2.07944, 'G//RRG//RRG//RRG//RR':-2.77259, 'G//RRG//RRG//RRG//RRG//RR':-3.46574, 'G//RRG//RRG//RRG//RRG//RRG//RR':-4.15888, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RR':-4.85203, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-5.54518, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.23832, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.93147, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-7.62462, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-8.31777} [Z=-0.00024417]
1484	-39.1628	-34.9737	-4.18903	λx.cons(G,cons(cons(cons(/,cons(/,R)),R),if(flip(),F(x),x)))
# {'G//RR':-0.693147, 'G//RRG//RR':-1.38629, 'G//RRG//RRG//RR':-2.07944, 'G//RRG//RRG//RRG//RR':-2.77259, 'G//RRG//RRG//RRG//RRG//RR':-3.46574, 'G//RRG//RRG//RRG//RRG//RRG//RR':-4.15888, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RR':-4.85203, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-5.54518, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.23832, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.93147, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-7.62462, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-8.31777} [Z=-0.00024417]
3076	-39.1628	-34.9737	-4.18903	λx.cons(cons(if(flip(),F(x),x),G),cons(cons(/,cons(/,R)),R))
# {'G//RR':-0.693147, 'G//RRG//RR':-1.38629, 'G//RRG//RRG//RR':-2.07944, 'G//RRG//RRG//RRG//RR':-2.77259, 'G//RRG//RRG//RRG//RRG//RR':-3.46574, 'G//RRG//RRG//RRG//RRG//RRG//RR':-4.15888, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RR':-4.85203, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-5.54518, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.23832, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.93147, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-7.62462, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-8.31777} [Z=-0.00024417]
2670	-39.1628	-34.9737	-4.18903	λx.cons(G,cons(cons(/,cons(/,R)),cons(R,if(flip(),x,F(x)))))
# {'G//RR':-0.693147, 'G//RRG//RR':-1.38629, 'G//RRG//RRG//RR':-2.07944, 'G//RRG//RRG//RRG//RR':-2.77259, 'G//RRG//RRG//RRG//RRG//RR':-3.46574, 'G//RRG//RRG//RRG//RRG//RRG//RR':-4.15888, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RR':-4.85203, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-5.54518, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.23832, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.93147, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-7.62462, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-8.31777} [Z=-0.00024417]
2215	-39.1628	-34.9737	-4.18903	λx.cons(G,cons(cons(cons(/,cons(/,R)),R),if(flip(),x,F(x))))
# {'G//RR':-0.693147, 'G//RRG//RR':-1.38629, 'G//RRG//RRG//RR':-2.07944, 'G//RRG//RRG//RRG//RR':-2.77259, 'G//RRG//RRG//RRG//RRG//RR':-3.46574, 'G//RRG//RRG//RRG//RRG//RRG//RR':-4.15888, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RR':-4.85203, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-5.54518, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.23832, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.93147, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-7.62462, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-8.31777} [Z=-0.00024417]
2934	-39.1628	-34.9737	-4.18903	λx.cons(cons(if(flip(),x,F(x)),G),cons(cons(/,cons(/,R)),R))
# {'G//RR':-0.693147, 'G//RRG//RR':-1.38629, 'G//RRG//RRG//RR':-2.07944, 'G//RRG//RRG//RRG//RR':-2.77259, 'G//RRG//RRG//RRG//RRG//RR':-3.46574, 'G//RRG//RRG//RRG//RRG//RRG//RR':-4.15888, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RR':-4.85203, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-5.54518, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.23832, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.93147, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-7.62462, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-8.31777} [Z=-0.00024417]
2987	-39.1628	-34.9737	-4.18903	λx.cons(if(flip(),F(x),x),cons(G,cons(cons(/,cons(/,R)),R)))
# {'G//RR':-0.693147, 'G//RRG//RR':-1.38629, 'G//RRG//RRG//RR':-2.07944, 'G//RRG//RRG//RRG//RR':-2.77259, 'G//RRG//RRG//RRG//RRG//RR':-3.46574, 'G//RRG//RRG//RRG//RRG//RRG//RR':-4.15888, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RR':-4.85203, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-5.54518, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.23832, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.93147, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-7.62462, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-8.31777} [Z=-0.00024417]
5015	-39.1628	-34.9737	-4.18903	λx.cons(G,cons(cons(/,cons(/,R)),cons(R,if(flip(),F(x),x))))
# {'G//RR':-0.693147, 'G//RRG//RR':-1.38629, 'G//RRG//RRG//RR':-2.07944, 'G//RRG//RRG//RRG//RR':-2.77259, 'G//RRG//RRG//RRG//RRG//RR':-3.46574, 'G//RRG//RRG//RRG//RRG//RRG//RR':-4.15888, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RR':-4.85203, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-5.54518, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.23832, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.93147, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-7.62462, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-8.31777} [Z=-0.00024417]
2855	-39.1628	-34.9737	-4.18903	λx.cons(if(flip(),x,F(x)),cons(G,cons(cons(/,cons(/,R)),R)))
# {'G//RR':-0.693147, 'G//RRG//RR':-1.38629, 'G//RRG//RRG//RR':-2.07944, 'G//RRG//RRG//RRG//RR':-2.77259, 'G//RRG//RRG//RRG//RRG//RR':-3.46574, 'G//RRG//RRG//RRG//RRG//RRG//RR':-4.15888, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RR':-4.85203, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-5.54518, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.23832, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-6.93147, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-7.62462, 'G//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RRG//RR':-8.31777} [Z=-0.00024417]
3102	-39.1628	-34.9737	-4.18903	λx.cons(G,cons(/,cons(/,cons(cons(R,R),if(flip(),x,F(x))))))
# Global sample count:	399996
# Elapsed time:	874.209 seconds 
# Samples per second:	457.552
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ 
