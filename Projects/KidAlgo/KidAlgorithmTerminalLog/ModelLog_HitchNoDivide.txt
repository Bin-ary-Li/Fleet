binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ ./main --alphabet=BRG/ --data=/RBGB/,/RBGB//RBGB/,/RBGB//RBGB//RBGB/ --threads=4 --top=10
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Running Fleet on ��A`� with PID=5889 by user ��A`� at Sun Mar  3 22:29:06 2019
# Executable checksum: 5a6826c18bf92e6614357f4d4967292f  /proc/5889/exe
# 	 --input=input.txt
# 	 --nthreads=4
# 	 --mcmc=100000
# 	 --time=0
# 	 --restart=0
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# # {'{'''::00} [Z=} [Z=00]]
# NewTop:0	-216.947	-1.22378	-215.723	λx.x

# NewTop:5	-216.947	-1.22378	-215.723	λx.x
# {'':-0.693147, '/':-0.693147} [Z=0]
# NewTop:0	-206.824	-7.00353	-199.82	λx.if(flip(),/,x)
# {'/':# {'/':0} [Z=0]
# NewTop:0	-203.192	-5.44328	-197.748	λx.car(/)
# {'/':0} [Z=0]
# NewTop:0	-200.359	-2.61007	-197.748	λx./
0} [Z=0]
# NewTop:44	-200.359	-2.61007	-197.748	λx./
# {'/R':0} [Z=0]
# NewTop:0	-187.827	-8.05335	-179.774	λx.cons(/,R)
# {'/RB':0} [Z=0]
# NewTop:0	-178.13	-16.3298	-161.8	λx.cons(/,cons(car(R),B))
# {'/RB':0} [Z=0]
# NewTop:0	-175.296	-13.4966	-161.8	λx.cons(/,cons(R,B))
# {'/RBG':0} [Z=0]
# NewTop:0	-162.765	-18.9399	-143.825	λx.cons(cons(/,R),cons(B,G))
# {'/RBGB':0} [Z=0]
# NewTop:0	-155.901	-30.0496	-125.851	λx.cons(cons(/,cons('',cons(cons(R,B),G))),B)
# {'/RBGB':0} [Z=0]
# NewTop:0	-154.291	-28.4402	-125.851	λx.cons(cons(/,cons(cons(cons(R,B),G),x)),B)
# {'/RBGB':0} [Z=0]
# NewTop:0	-150.234	-24.3832	-125.851	λx.cons(cons(/,cons(cons(R,B),G)),B)
# {'/RBGB/':0} [Z=0]
# NewTop:0	-144.593	-36.7167	-107.877	λx.cons(cons(/,cons(R,x)),cons(B,cons(cons(car(G),B),/)))
# {'/RBGB/':0} [Z=0]
# NewTop:0	-141.76	-33.8835	-107.877	λx.cons(cons(/,cons(R,x)),cons(B,cons(cons(G,B),/)))
# {'/RBGB/':0} [Z=0]
# NewTop:0	-137.703	-29.8265	-107.877	λx.cons(cons(/,R),cons(B,cons(cons(G,B),/)))
# {'/RBGB/':-0.693147, '/RBGB//RBGB/':-1.38629, '/RBGB//RBGB//RBGB/':-2.07944, '/RBGB//RBGB//RBGB//RBGB/':-2.77259, '/RBGB//RBGB//RBGB//RBGB//RBGB/':-3.46574, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.15888, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.85203, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-5.54518, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.23832, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.93147} [Z=-0.00097704]
# NewTop:0	-44.606	-40.417	-4.18903	λx.cons(if(flip(),F(x),x),cons(cons(cons(/,cons(R,cons(B,G))),B),/))
# {'/RBGB/':-0.693147, '/RBGB//RBGB/':-1.38629, '/RBGB//RBGB//RBGB/':-2.07944, '/RBGB//RBGB//RBGB//RBGB/':-2.77259, '/RBGB//RBGB//RBGB//RBGB//RBGB/':-3.46574, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.15888, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.85203, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-5.54518, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.23832, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.93147} [Z=-0.00097704]
# NewTop:0	-44.606	-40.417	-4.18903	λx.cons(cons(/,R),cons(B,cons(cons(cons(G,B),/),if(flip(),x,F(x)))))
# {'/RBGB/':-0.693147, '/RBGB//RBGB/':-1.38629, '/RBGB//RBGB//RBGB/':-2.07944, '/RBGB//RBGB//RBGB//RBGB/':-2.77259, '/RBGB//RBGB//RBGB//RBGB//RBGB/':-3.46574, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.15888, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.85203, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-5.54518, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.23832, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.93147} [Z=-0.00097704]
971	-44.606	-40.417	-4.18903	λx.cons(if(flip(),x,F(x)),cons(cons(cons(/,cons(R,cons(B,G))),B),/))
# {'/RBGB/':-0.693147, '/RBGB//RBGB/':-1.38629, '/RBGB//RBGB//RBGB/':-2.07944, '/RBGB//RBGB//RBGB//RBGB/':-2.77259, '/RBGB//RBGB//RBGB//RBGB//RBGB/':-3.46574, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.15888, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.85203, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-5.54518, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.23832, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.93147} [Z=-0.00097704]
1454	-44.606	-40.417	-4.18903	λx.cons(cons(/,cons(cons(R,B),G)),cons(B,cons(/,if(flip(),x,F(x)))))
# {'/RBGB/':-0.693147, '/RBGB//RBGB/':-1.38629, '/RBGB//RBGB//RBGB/':-2.07944, '/RBGB//RBGB//RBGB//RBGB/':-2.77259, '/RBGB//RBGB//RBGB//RBGB//RBGB/':-3.46574, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.15888, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.85203, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-5.54518, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.23832, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.93147} [Z=-0.00097704]
1300	-44.606	-40.417	-4.18903	λx.cons(if(flip(),F(x),x),cons(cons(cons(/,cons(R,cons(B,G))),B),/))
# {'/RBGB/':-0.693147, '/RBGB//RBGB/':-1.38629, '/RBGB//RBGB//RBGB/':-2.07944, '/RBGB//RBGB//RBGB//RBGB/':-2.77259, '/RBGB//RBGB//RBGB//RBGB//RBGB/':-3.46574, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.15888, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.85203, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-5.54518, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.23832, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.93147} [Z=-0.00097704]
96	-44.606	-40.417	-4.18903	λx.cons(cons(cons(if(flip(),x,F(x)),/),R),cons(B,cons(cons(G,B),/)))
# {'/RBGB/':-0.693147, '/RBGB//RBGB/':-1.38629, '/RBGB//RBGB//RBGB/':-2.07944, '/RBGB//RBGB//RBGB//RBGB/':-2.77259, '/RBGB//RBGB//RBGB//RBGB//RBGB/':-3.46574, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.15888, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.85203, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-5.54518, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.23832, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.93147} [Z=-0.00097704]
946	-44.606	-40.417	-4.18903	λx.cons(cons(if(flip(),x,F(x)),cons(/,R)),cons(B,cons(cons(G,B),/)))
# {'/RBGB/':-0.693147, '/RBGB//RBGB/':-1.38629, '/RBGB//RBGB//RBGB/':-2.07944, '/RBGB//RBGB//RBGB//RBGB/':-2.77259, '/RBGB//RBGB//RBGB//RBGB//RBGB/':-3.46574, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.15888, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.85203, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-5.54518, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.23832, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.93147} [Z=-0.00097704]
1634	-44.606	-40.417	-4.18903	λx.cons(cons(if(flip(),F(x),x),cons(/,R)),cons(B,cons(cons(G,B),/)))
# {'/RBGB/':-0.693147, '/RBGB//RBGB/':-1.38629, '/RBGB//RBGB//RBGB/':-2.07944, '/RBGB//RBGB//RBGB//RBGB/':-2.77259, '/RBGB//RBGB//RBGB//RBGB//RBGB/':-3.46574, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.15888, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.85203, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-5.54518, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.23832, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.93147} [Z=-0.00097704]
388	-44.606	-40.417	-4.18903	λx.cons(cons(cons(if(flip(),F(x),x),/),R),cons(B,cons(cons(G,B),/)))
# {'/RBGB/':-0.693147, '/RBGB//RBGB/':-1.38629, '/RBGB//RBGB//RBGB/':-2.07944, '/RBGB//RBGB//RBGB//RBGB/':-2.77259, '/RBGB//RBGB//RBGB//RBGB//RBGB/':-3.46574, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.15888, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.85203, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-5.54518, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.23832, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.93147} [Z=-0.00097704]
3240	-44.606	-40.417	-4.18903	λx.cons(cons(/,cons(cons(R,B),G)),cons(B,cons(/,if(flip(),F(x),x))))
# {'/RBGB/':-0.693147, '/RBGB//RBGB/':-1.38629, '/RBGB//RBGB//RBGB/':-2.07944, '/RBGB//RBGB//RBGB//RBGB/':-2.77259, '/RBGB//RBGB//RBGB//RBGB//RBGB/':-3.46574, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.15888, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.85203, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-5.54518, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.23832, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.93147} [Z=-0.00097704]
432	-44.606	-40.417	-4.18903	λx.cons(cons(/,R),cons(B,cons(cons(cons(G,B),/),if(flip(),F(x),x))))
# {'/RBGB/':-0.693147, '/RBGB//RBGB/':-1.38629, '/RBGB//RBGB//RBGB/':-2.07944, '/RBGB//RBGB//RBGB//RBGB/':-2.77259, '/RBGB//RBGB//RBGB//RBGB//RBGB/':-3.46574, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.15888, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-4.85203, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-5.54518, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.23832, '/RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB//RBGB/':-6.93147} [Z=-0.00097704]
1401	-44.606	-40.417	-4.18903	λx.cons(cons(/,R),cons(B,cons(cons(cons(G,B),/),if(flip(),x,F(x)))))
# Global sample count:	399996
# Elapsed time:	973.264 seconds 
# Samples per second:	410.984
binli@binli-HP-Z420-Workstation:~/Desktop/BinCalGitDir/Fleet/Models/FormalLanguageTheory-Simple$ 
